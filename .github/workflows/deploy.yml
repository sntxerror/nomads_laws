name: Deploy to Cloud Run

on:
  push:
    branches: [ main ]

env:
  PROJECT_ID: nomads-laws
  SERVICE_NAME: nomads-laws
  REGION: us-central1

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest

    - name: Run tests
      run: |
        export PYTHONPATH=$PYTHONPATH:$(pwd)
        pytest tests/

    - id: 'auth'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'
        service_account: 'nomads-laws-sa@nomads-laws.iam.gserviceaccount.com'

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v1'

    - name: Configure Docker
      run: gcloud auth configure-docker

    - name: Deploy to Cloud Run
      id: deploy
      run: |
        # Build and deploy
        gcloud builds submit --tag gcr.io/$PROJECT_ID/$SERVICE_NAME --project $PROJECT_ID --timeout=1800s

        # Get service URL
        CLOUD_RUN_URL=$(gcloud run services describe $SERVICE_NAME --platform managed --region $REGION --format 'value(status.url)' | sed 's/https:\/\///')

        # Deploy with environment variables
        gcloud run deploy $SERVICE_NAME \
          --image gcr.io/$PROJECT_ID/$SERVICE_NAME \
          --platform managed \
          --region $REGION \
          --project $PROJECT_ID \
          --allow-unauthenticated \
          --set-env-vars="GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }},TELEGRAM_TOKEN=${{ secrets.TELEGRAM_TOKEN }},CLOUD_RUN_URL=${CLOUD_RUN_URL}"

    - name: Verify deployment
      run: |
        DEPLOY_URL=$(gcloud run services describe $SERVICE_NAME --platform managed --region $REGION --format 'value(status.url)')
        curl -f "${DEPLOY_URL}/health" || exit 1