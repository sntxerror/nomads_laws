from telegram import Update
from telegram.ext import ContextTypes
from ..services.gemini import GeminiService

class BotHandlers:
    def __init__(self):
        self.gemini = GeminiService()
    
    async def start(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        await update.message.reply_text(
            "üá¨üá™ –ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É –≤–∞–º —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è —Å –Ω–∞–ª–æ–≥–æ–≤—ã–º –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–æ–º –ì—Ä—É–∑–∏–∏. –ó–∞–¥–∞–≤–∞–π—Ç–µ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã!"
        )
    
    async def handle_message(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        try:
            # Process user question through GeminiService
            answer = await self.gemini.ask_legal_question(update.message.text)
            await update.message.reply_text(answer)
        except Exception as e:
            await update.message.reply_text(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")
